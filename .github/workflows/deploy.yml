name: Frontend Deploy to EC2

on:
  push:
    branches: main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Create deployment package
        run: |
          tar -czf frontend-build.tar.gz dist/ nginx.conf

      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "frontend-build.tar.gz"
          target: "/home/ubuntu/"

      - name: Extract and restart service
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          command_timeout: 5m
          script: |
            cd /home/ubuntu

            # 빌드 결과물 압축 해제
            tar -xzf frontend-build.tar.gz

            # 기존 프론트엔드 중지
            cd /home/ubuntu/ImgBellProject
            sudo docker-compose stop frontend
            sudo docker-compose rm -f frontend

            # 새 빌드 결과물 복사
            sudo rm -rf /home/ubuntu/ImgBellProject/imgbellfront/dist
            sudo mv /home/ubuntu/dist /home/ubuntu/ImgBellProject/imgbellfront/
            sudo mv /home/ubuntu/nginx.conf /home/ubuntu/ImgBellProject/imgbellfront/

            # Docker 이미지 빌드 (빠름 - 이미 빌드된 파일 사용)
            sudo docker-compose build frontend
            sudo docker-compose up -d frontend

            # 정리
            rm -f /home/ubuntu/frontend-build.tar.gz
